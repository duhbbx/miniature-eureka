cmake_minimum_required(VERSION 3.18)
project(leetcode)

set(CMAKE_CXX_STANDARD 20)

# add_definitions(-DUNICODE -D_UNICODE)    #使用UNICODE字符集

# add_compile_options("$<$<C_COMPILER_ID:MSVC>:/utf-8>") #使用utf-8文件编码



add_executable("9e0dea7dab614a4699e79e8b452c5705" "图/1203.项目管理[官方的双拓扑排序].cpp")
add_executable("9ed5fb83cff94937b59bbca54a242a5e" "操作模拟/1678. 设计 Goal 解析器.cpp")
add_executable("90cacf18792f4dfa868f8e67ce03131b" "图/1298. 你能从盒子里获得的最大糖果数.cpp")
add_executable("16524909fa7c4958aa87f886000d4241" "图/1368. 使网格图至少有一条有效路径的最小代价.cpp")
add_executable("a3dfe5ee6f6d47028de3949345ff4236" "比赛/2022-11-06 第 318 场周赛/6229. 对数组执行操作.cpp")
add_executable("a5ea0d69c2604d0692459a60ff70de34" "比赛/2022-11-06 第 318 场周赛/6230. 长度为 K 子数组中的最大和.cpp")
add_executable("63fcbfb2ee2848efa4758e44817a94bf" "图/1377. T 秒后青蛙的位置.cpp")
add_executable("dae5e2de0eb141b98b494283ab53e6d9" "字符串/1684. 统计一致字符串的数目.cpp")
add_executable("2c21cb94fcaf4e62b6b6c4ee305763d2" "前缀和/238. 除自身以外数组的乘积.cpp")
add_executable("4925ce689d41475fb21419615ba9490d" "前缀和/303. 区域和检索 - 数组不可变.cpp")
add_executable("015e8afd4ce2425b863530d9c842737f" "前缀和/363. 矩形区域不超过 K 的最大数值和.cpp")
add_executable("1abf928998bd4d9a8906af3820836bec" "前缀和/764. 最大加号标志.cpp")
add_executable("14ceb9719fe34d12b81011e6ba294847" "前缀和/497. 非重叠矩形中的随机点.cpp")
add_executable("300d58ab48ef4c31934289fd575e6230" "图/864. 获取所有钥匙的最短路径.cpp")
add_executable("84e790b383364763bebeac73fd06c694" "字符串/1704. 判断字符串的两半是否相似.cpp")
add_executable("e65d08d65ec346548136c99abb9fc0c2" "图/864. 获取所有钥匙的最短路径[优化版的].cpp")
add_executable("12f17ca7d3dc4b75881f9b853637798c" "图/864. 获取所有钥匙的最短路径【自己写的】.cpp")
add_executable("f3fb129d666c44169a41378c8d2a3c11" "前缀和/523. 连续的子数组和.cpp")
add_executable("a416fa985c5f4cc29786376c72c2b770" "前缀和/724. 寻找数组的中心下标.cpp")
add_executable("9f81a33b043b40edbfc7c43f4ebd0b85" "前缀和/930. 和相同的二元子数组.cpp")
add_executable("2ba3e0e231af4130aa7ac0f90b4e2a66" "前缀和/974. 和可被 K 整除的子数组.cpp")